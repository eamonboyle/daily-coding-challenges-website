services:
    postgres:
        container_name: daily-coding-challenges_postgres
        image: postgres:latest
        env_file: .env
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        volumes:
            - daily_coding_challenges_data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        restart: unless-stopped
        healthcheck: # Added health check
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
            interval: 10s
            timeout: 5s
            retries: 5

    nextjs:
        container_name: daily-coding-challenges_nextjs
        build:
            context: .
            dockerfile: Dockerfile.nextjs
        ports:
            - "3000:3000"
        env_file: .env
        environment:
            - DATABASE_URL=${DATABASE_URL}
            - CODE_EXECUTION_URL=${CODE_EXECUTION_URL}
        depends_on:
            postgres:
                condition: service_healthy # Updated to wait for health
        restart: unless-stopped

    code-execution:
        container_name: daily-coding-challenges_code_execution
        build:
            context: ./code-execution-server
            dockerfile: Dockerfile.code-execution
        ports:
            - "5000:5000"
        restart: unless-stopped
        depends_on:
            - postgres

networks:
    default:
        driver: bridge

volumes:
    daily_coding_challenges_data:
